openapi: "3.0.4"
info:
  title: Education APIs on HMPPS Integration API
  version: 0.0.4
  description: |
    Design specification for the API endpoints of Curious Integration with HMPPS

    This design specification is an illustration of the HMPPS Integration API for Curious. This is NOT the actual OpenAPI specification of HMPPS Integration API.

    Read more at [HMPPS Integration API](https://ministryofjustice.github.io/hmpps-integration-api/documentation/api/index.html)

servers:
  - url: https://dev.integration-api.hmpps.service.justice.gov.uk
    description: HMPPS Integration API - Development server
  - url: https://preprod.integration-api.hmpps.service.justice.gov.uk
    description: HMPPS Integration API - Pre-production server
  - url: https://integration-api.hmpps.service.justice.gov.uk
    description: HMPPS Integration API - Production server

paths:
  /v1/persons/{hmppsId}/education/assessments:
    get:
      summary: Returns education assessments of a person
      description: Returns education assessment (eligibility, etc.) of a person
      tags:
        - Education
        - Persons
      parameters:
        - $ref: "#/components/parameters/hmppsIdPathParameter"
      responses:
        "200":
          $ref: "#/components/responses/EducationAssessmentsResponse"
        "400":
          description: The failure status is set when the request is invalid. An error response will be provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          $ref: "#/components/responses/404ErrorResponse"

  /v1/persons/{hmppsId}/prisoner-base-location:
    get:
      summary: Returns prisoner's base location
      tags:
        - Persons
      parameters:
        - $ref: "#/components/parameters/hmppsIdPathParameter"
      responses:
        "200":
          $ref: "#/components/responses/PrisonerBaseLocationResponse"
        "400":
          description: The failure status is set when the request is invalid. An error response will be provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          $ref: "#/components/responses/404ErrorResponse"

  /v1/persons/{encodedHmppsId}:
    get:
      summary: Returns a person.
      description: |
        These data will be included for Curious. <br>
        at data.prisonerOffenderSearch: 
        - firstName, lastName
        - dateOfBirth
        - gender
        - ethnicity
        - aliases(array)
          * firstName
          * lastName
          * dateOfBirth
          * gender
        - ethnicity
        - identifiers
          * nomisNumber
      tags: [Persons]
      parameters:
        - $ref: "#/components/parameters/encodedHmppsIdPathParameter"
      responses:
        "200":
          $ref: "#/components/responses/PersonResponse"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonNotFound"
        "500": 
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

components:
  responses:
    404ErrorResponse:
      description: The failure status is set when the requested entity is not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            notFound:
              summary: Person not found in prison
              value:
                status: 404
                developerMessage: "404 Not found error: Could not find person with HMPPS id: 12345678ABC"
                userMessage: "Could not find person with HMPPS id: 12345678ABC"
    EducationAssessmentsResponse:
      description: Successfully found education assessments.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EducationAssessments"
          examples:
            basicSkillsAssessmentRequired:
              summary: assessment is required
              value:
                data:
                  basicSkillsAssessmentRequired: true
            assessmentNotRequired:
              summary: assessment is NOT required
              value:
                data:
                  basicSkillsAssessmentRequired: false
    PrisonerBaseLocationResponse:
      description: Successfully found prisoner's base location.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PrisonerBaseLocation"
          examples:
            reception:
              summary: Received into prison
              value:
                data:
                  inPrison: true
                  prisonId: "MDI"
                  lastPrisonId: "MDI"
                  lastMovementType: "Admission"
                  receptionDate: "2025-01-01"
            release:
              summary: Released from prison
              value:
                data:
                  inPrison: false
                  lastPrisonId: "MDI"
                  lastMovementType: "Release"
                  receptionDate: "2025-01-01"

    PersonResponse:
      description: Successfully found a person with the provided HMPPS ID.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DataResponseOffenderSearchResponse"

  schemas:
    EducationAssessments:
      properties:
        data:
          type: object
          properties:
            basicSkillsAssessmentRequired:
              type: boolean
          required: [basicSkillsAssessmentRequired]
      required: [data]
    PrisonerBaseLocation:
      properties:
        data:
          type: object
          properties:
            inPrison:
              description: In prison or not
              type: boolean
              example: true
            prisonId:
              type: string
              example: MDI
            lastPrisonId:
              description: The last prison for the prisoner (which is the same as the prisonId if they are still inside prison)
              type: string
              example: MDI
            lastMovementType:
              description: Last Movement Type of prisoner
              type: string
              enum: [Admission, Release, Transfers, Court, "Temporary Absence"]
              example: Release
            receptionDate:
              description: Date prisoner was received into the prison
              type: string
              format: date
              example: 2025-04-01
      required: [data]

    ErrorResponse:
      properties:
        developerMessage:
          type: string
        errorCode:
          type: integer
        status:
          type: integer
        userMessage:
          type: string
    
    Person:
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Morgan
        middleName:
          type: string
          description: Middle name,
          example: John
        dateOfBirth:
          type: string
          format: date
          description: Date of birth
          example: "1965-12-01"
        gender:
          type: string
          description: Gender
          example: "Male"
        ethnicity:
          type: string
          description: Ethnicity
          example: "White: Eng./Welsh/Scot./N.Irish/British"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/Alias"
        identifiers:
          $ref: "#/components/schemas/Identifiers"
        pncId:
          type: string
          description: An identifier from the Police National Computer (PNC)
        hmppsId:
          type: string
          description: HMPPS identifier
          example: "2008/0545166T"
        contactDetails:
          $ref: "#/components/schemas/ContactDetailsWithEmailAndPhone"
        currentRestriction:
          type: boolean
        restrictionMessage:
          type: string
        currentExclusion:
          type: boolean
        exclusionMessage:
          type: string
      required: [aliases, firstName, identifiers, lastName]
    
    DataResponseOffenderSearchResponse:
      properties:
        data:
          $ref: "#/components/schemas/OffenderSearchResponse"
      required: [data]
    OffenderSearchResponse:
      properties:
        prisonerOffenderSearch: 
          $ref: "#/components/schemas/Person"
        probationOffenderSearch:
          $ref: "#/components/schemas/PersonOnProbation"
    PersonOnProbation:
      properties:
        underActiveSupervision:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
        ethnicity:
          type: string
        aliases:
          type: "array"
          items:
            $ref: "#/components/schemas/Alias"
        identifiers:
          $ref: "#/components/schemas/Identifiers"
        pncId:
          type: string
        hmppsId:
          type: string
        contactDetails:
          $ref: "#/components/schemas/ContactDetailsWithEmailAndPhone"
        currentRestriction:
          type: boolean
        restrictionMessage:
          type: string
        currentExclusion:
          type: boolean
        exclusionMessage:
          type: string
      required: [
        "aliases",
        "firstName",
        "identifiers",
        "lastName",
        "underActiveSupervision"
      ]
    
    Alias:
      properties:
        firstName:
          type: string
          description: first name
          example: "John"
        lastName:
          type: string
          description: last name
          example: "Marston"
        middleName:
          type: string
          description: middle name
          example: "Marston"
        dateOfBirth:
          type: string
          format: date,
          description: date of birth
          example: "1965-12-01"
        gender:
          type: string
          description: gender
          example: Male
        ethnicity:
          type: string
          description: ethnicity
          example: "Prefer not to say"
      required: [firstName, lastName]
    Identifiers:
      description: "Other unique identifiers for a person."
      properties:
        nomisNumber:
          type: string
          description: "A prisoner identifier from NOMIS."
          example: "A1234AA"
        croNumber:
          type: string
          description: "A Criminal Records Office identifier from National Identification Service (NIS) or National Automated Fingerprint Identification System (NAFIS)."
          example: "SF80/655108T"
        deliusCrn:
          type: string
          description: "A Case Reference Number from Delius."
          example: "X00001"
    ContactDetailsWithEmailAndPhone:
      properties:
        phoneNumbers:
          type: array
          items: 
            $ref: "#/components/schemas/PhoneNumber"
        emails:
          type: array
          description: A list of email addresses
          items: 
            type: string
            example: some.one@example.com
    PhoneNumber:
        type: object
        properties:
          number:
            type: string
            description: A phone number
            example: 079123456789
          type:
            type: string
            description: The type of number
            example: TELEPHONE

    BadRequest:
      properties:
        status:
          example: 400
        userMessage:
          example: "Validation failure: No query parameters specified."
        developerMessage:
          example: "No query parameters specified."
    PersonNotFound:
      description: "Failed to find a person with the provided HMPPS ID."
      properties:
        status:
          example: 404
        userMessage:
          example: "404 Not found error: Could not find person with HMPPS id: 2003/0011991D."
        developerMessage:
          example: "Could not find person with HMPPS id: 2003/0011991D."
    InternalServerError:
      description: "An upstream service was not responding, so we cannot verify the accuracy of any data we did get."
      properties:
        status:
          example: 500
        userMessage:
          example: "Internal Server Error"
        developerMessage:
          example: "Unable to complete request as an upstream service is not responding."

  parameters:
    hmppsIdPathParameter:
      name: hmppsId
      description: The HMPPS ID of the person
      schema:
        type: string
      in: path
      required: true
    encodedHmppsIdPathParameter:
      name: encodedHmppsId
      description: A URL-encoded HMPPS identifier
      schema:
        type: string
        example: "2008%2F0545166T"
      in: path
      required: true
